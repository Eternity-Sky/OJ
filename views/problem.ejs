<%- include('layout') %>

<div class="row">
    <div class="col-md-8">
        <div class="card mb-4">
            <div class="card-header">
                <h2><%= problem.title %></h2>
                <div class="d-flex justify-content-between align-items-center">
                    <span class="badge bg-<%= problem.difficulty === '简单' ? 'success' : (problem.difficulty === '中等' ? 'warning' : 'danger') %>">
                        <%= problem.difficulty %>
                    </span>
                    <div>
                        <span class="me-3">通过率：<%= problem.acceptanceRate %>%</span>
                        <span>提交次数：<%= problem.totalSubmissions %></span>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="problem-description">
                    <%- marked(problem.description) %>
                </div>
                
                <h4 class="mt-4">示例</h4>
                <% problem.testCases.filter(tc => tc.isExample).forEach((testCase, index) => { %>
                    <div class="example-case mb-3">
                        <h5>示例 <%= index + 1 %></h5>
                        <pre class="bg-light p-2">输入：<%= testCase.input %></pre>
                        <pre class="bg-light p-2">输出：<%= testCase.output %></pre>
                    </div>
                <% }) %>

                <h4 class="mt-4">限制</h4>
                <ul>
                    <li>时间限制：<%= problem.timeLimit %> ms</li>
                    <li>内存限制：<%= problem.memoryLimit %> MB</li>
                </ul>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h4>提交代码</h4>
            </div>
            <div class="card-body">
                <form id="submission-form">
                    <div class="mb-3">
                        <label for="language" class="form-label">编程语言</label>
                        <select class="form-select" id="language" name="language">
                            <option value="54">C++ (GCC 9.2.0)</option>
                            <option value="71">Python (3.8.1)</option>
                            <option value="62">Java (OpenJDK 13.0.1)</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="code" class="form-label">代码</label>
                        <textarea id="code" name="code" class="form-control" rows="10"></textarea>
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary">提交</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // 初始化 CodeMirror 编辑器
    var editor = CodeMirror.fromTextArea(document.getElementById('code'), {
        lineNumbers: true,
        mode: 'text/x-c++src',
        theme: 'default',
        indentUnit: 4,
        smartIndent: true,
        lineWrapping: true,
        matchBrackets: true,
        autoCloseBrackets: true
    });

    // 根据选择的语言更改编辑器模式
    document.getElementById('language').addEventListener('change', function(e) {
        const langMap = {
            '54': 'text/x-c++src',
            '71': 'python',
            '62': 'text/x-java'
        };
        editor.setOption('mode', langMap[e.target.value]);
    });

    // 提交代码
    document.getElementById('submission-form').addEventListener('submit', async function(e) {
        e.preventDefault();
        const response = await fetch('/submissions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                problemId: '<%= problem._id %>',
                language: document.getElementById('language').value,
                code: editor.getValue()
            })
        });
        
        if (response.ok) {
            const submission = await response.json();
            window.location.href = `/submissions/${submission._id}`;
        } else {
            const error = await response.json();
            alert(error.message);
        }
    });
</script>
